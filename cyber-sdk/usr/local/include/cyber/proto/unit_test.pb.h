// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unit_test.proto

#ifndef PROTOBUF_INCLUDED_unit_5ftest_2eproto
#define PROTOBUF_INCLUDED_unit_5ftest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_unit_5ftest_2eproto 

namespace protobuf_unit_5ftest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_unit_5ftest_2eproto
namespace apollo {
namespace cyber {
namespace proto {
class Chatter;
class ChatterDefaultTypeInternal;
extern ChatterDefaultTypeInternal _Chatter_default_instance_;
class ChatterBenchmark;
class ChatterBenchmarkDefaultTypeInternal;
extern ChatterBenchmarkDefaultTypeInternal _ChatterBenchmark_default_instance_;
class Needata;
class NeedataDefaultTypeInternal;
extern NeedataDefaultTypeInternal _Needata_default_instance_;
class UnitTest;
class UnitTestDefaultTypeInternal;
extern UnitTestDefaultTypeInternal _UnitTest_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::cyber::proto::Chatter* Arena::CreateMaybeMessage<::apollo::cyber::proto::Chatter>(Arena*);
template<> ::apollo::cyber::proto::ChatterBenchmark* Arena::CreateMaybeMessage<::apollo::cyber::proto::ChatterBenchmark>(Arena*);
template<> ::apollo::cyber::proto::Needata* Arena::CreateMaybeMessage<::apollo::cyber::proto::Needata>(Arena*);
template<> ::apollo::cyber::proto::UnitTest* Arena::CreateMaybeMessage<::apollo::cyber::proto::UnitTest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace cyber {
namespace proto {

// ===================================================================

class UnitTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.UnitTest) */ {
 public:
  UnitTest();
  virtual ~UnitTest();

  UnitTest(const UnitTest& from);

  inline UnitTest& operator=(const UnitTest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnitTest(UnitTest&& from) noexcept
    : UnitTest() {
    *this = ::std::move(from);
  }

  inline UnitTest& operator=(UnitTest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitTest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnitTest* internal_default_instance() {
    return reinterpret_cast<const UnitTest*>(
               &_UnitTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UnitTest* other);
  friend void swap(UnitTest& a, UnitTest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnitTest* New() const final {
    return CreateMaybeMessage<UnitTest>(NULL);
  }

  UnitTest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnitTest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnitTest& from);
  void MergeFrom(const UnitTest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnitTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string class_name = 1;
  bool has_class_name() const;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // optional string case_name = 2;
  bool has_case_name() const;
  void clear_case_name();
  static const int kCaseNameFieldNumber = 2;
  const ::std::string& case_name() const;
  void set_case_name(const ::std::string& value);
  #if LANG_CXX11
  void set_case_name(::std::string&& value);
  #endif
  void set_case_name(const char* value);
  void set_case_name(const char* value, size_t size);
  ::std::string* mutable_case_name();
  ::std::string* release_case_name();
  void set_allocated_case_name(::std::string* case_name);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.UnitTest)
 private:
  void set_has_class_name();
  void clear_has_class_name();
  void set_has_case_name();
  void clear_has_case_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr case_name_;
  friend struct ::protobuf_unit_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Chatter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.Chatter) */ {
 public:
  Chatter();
  virtual ~Chatter();

  Chatter(const Chatter& from);

  inline Chatter& operator=(const Chatter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Chatter(Chatter&& from) noexcept
    : Chatter() {
    *this = ::std::move(from);
  }

  inline Chatter& operator=(Chatter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Chatter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Chatter* internal_default_instance() {
    return reinterpret_cast<const Chatter*>(
               &_Chatter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Chatter* other);
  friend void swap(Chatter& a, Chatter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Chatter* New() const final {
    return CreateMaybeMessage<Chatter>(NULL);
  }

  Chatter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Chatter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Chatter& from);
  void MergeFrom(const Chatter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Chatter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional uint64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional uint64 lidar_timestamp = 2;
  bool has_lidar_timestamp() const;
  void clear_lidar_timestamp();
  static const int kLidarTimestampFieldNumber = 2;
  ::google::protobuf::uint64 lidar_timestamp() const;
  void set_lidar_timestamp(::google::protobuf::uint64 value);

  // optional uint64 seq = 3;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.Chatter)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_lidar_timestamp();
  void clear_has_lidar_timestamp();
  void set_has_seq();
  void clear_has_seq();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 lidar_timestamp_;
  ::google::protobuf::uint64 seq_;
  friend struct ::protobuf_unit_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatterBenchmark : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ChatterBenchmark) */ {
 public:
  ChatterBenchmark();
  virtual ~ChatterBenchmark();

  ChatterBenchmark(const ChatterBenchmark& from);

  inline ChatterBenchmark& operator=(const ChatterBenchmark& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatterBenchmark(ChatterBenchmark&& from) noexcept
    : ChatterBenchmark() {
    *this = ::std::move(from);
  }

  inline ChatterBenchmark& operator=(ChatterBenchmark&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatterBenchmark& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatterBenchmark* internal_default_instance() {
    return reinterpret_cast<const ChatterBenchmark*>(
               &_ChatterBenchmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ChatterBenchmark* other);
  friend void swap(ChatterBenchmark& a, ChatterBenchmark& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatterBenchmark* New() const final {
    return CreateMaybeMessage<ChatterBenchmark>(NULL);
  }

  ChatterBenchmark* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChatterBenchmark>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChatterBenchmark& from);
  void MergeFrom(const ChatterBenchmark& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatterBenchmark* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 3;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional uint64 stamp = 1;
  bool has_stamp() const;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  ::google::protobuf::uint64 stamp() const;
  void set_stamp(::google::protobuf::uint64 value);

  // optional uint64 seq = 2;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ChatterBenchmark)
 private:
  void set_has_stamp();
  void clear_has_stamp();
  void set_has_seq();
  void clear_has_seq();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 stamp_;
  ::google::protobuf::uint64 seq_;
  friend struct ::protobuf_unit_5ftest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Needata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.Needata) */ {
 public:
  Needata();
  virtual ~Needata();

  Needata(const Needata& from);

  inline Needata& operator=(const Needata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Needata(Needata&& from) noexcept
    : Needata() {
    *this = ::std::move(from);
  }

  inline Needata& operator=(Needata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Needata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Needata* internal_default_instance() {
    return reinterpret_cast<const Needata*>(
               &_Needata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Needata* other);
  friend void swap(Needata& a, Needata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Needata* New() const final {
    return CreateMaybeMessage<Needata>(NULL);
  }

  Needata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Needata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Needata& from);
  void MergeFrom(const Needata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Needata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional bytes data1 = 5;
  bool has_data1() const;
  void clear_data1();
  static const int kData1FieldNumber = 5;
  const ::std::string& data1() const;
  void set_data1(const ::std::string& value);
  #if LANG_CXX11
  void set_data1(::std::string&& value);
  #endif
  void set_data1(const char* value);
  void set_data1(const void* value, size_t size);
  ::std::string* mutable_data1();
  ::std::string* release_data1();
  void set_allocated_data1(::std::string* data1);

  // optional bytes data2 = 6;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 6;
  const ::std::string& data2() const;
  void set_data2(const ::std::string& value);
  #if LANG_CXX11
  void set_data2(::std::string&& value);
  #endif
  void set_data2(const char* value);
  void set_data2(const void* value, size_t size);
  ::std::string* mutable_data2();
  ::std::string* release_data2();
  void set_allocated_data2(::std::string* data2);

  // optional bytes data3 = 7;
  bool has_data3() const;
  void clear_data3();
  static const int kData3FieldNumber = 7;
  const ::std::string& data3() const;
  void set_data3(const ::std::string& value);
  #if LANG_CXX11
  void set_data3(::std::string&& value);
  #endif
  void set_data3(const char* value);
  void set_data3(const void* value, size_t size);
  ::std::string* mutable_data3();
  ::std::string* release_data3();
  void set_allocated_data3(::std::string* data3);

  // optional bytes data4 = 8;
  bool has_data4() const;
  void clear_data4();
  static const int kData4FieldNumber = 8;
  const ::std::string& data4() const;
  void set_data4(const ::std::string& value);
  #if LANG_CXX11
  void set_data4(::std::string&& value);
  #endif
  void set_data4(const char* value);
  void set_data4(const void* value, size_t size);
  ::std::string* mutable_data4();
  ::std::string* release_data4();
  void set_allocated_data4(::std::string* data4);

  // optional bytes data5 = 9;
  bool has_data5() const;
  void clear_data5();
  static const int kData5FieldNumber = 9;
  const ::std::string& data5() const;
  void set_data5(const ::std::string& value);
  #if LANG_CXX11
  void set_data5(::std::string&& value);
  #endif
  void set_data5(const char* value);
  void set_data5(const void* value, size_t size);
  ::std::string* mutable_data5();
  ::std::string* release_data5();
  void set_allocated_data5(::std::string* data5);

  // optional bytes data6 = 10;
  bool has_data6() const;
  void clear_data6();
  static const int kData6FieldNumber = 10;
  const ::std::string& data6() const;
  void set_data6(const ::std::string& value);
  #if LANG_CXX11
  void set_data6(::std::string&& value);
  #endif
  void set_data6(const char* value);
  void set_data6(const void* value, size_t size);
  ::std::string* mutable_data6();
  ::std::string* release_data6();
  void set_allocated_data6(::std::string* data6);

  // optional bytes data7 = 11;
  bool has_data7() const;
  void clear_data7();
  static const int kData7FieldNumber = 11;
  const ::std::string& data7() const;
  void set_data7(const ::std::string& value);
  #if LANG_CXX11
  void set_data7(::std::string&& value);
  #endif
  void set_data7(const char* value);
  void set_data7(const void* value, size_t size);
  ::std::string* mutable_data7();
  ::std::string* release_data7();
  void set_allocated_data7(::std::string* data7);

  // optional bytes data8 = 12;
  bool has_data8() const;
  void clear_data8();
  static const int kData8FieldNumber = 12;
  const ::std::string& data8() const;
  void set_data8(const ::std::string& value);
  #if LANG_CXX11
  void set_data8(::std::string&& value);
  #endif
  void set_data8(const char* value);
  void set_data8(const void* value, size_t size);
  ::std::string* mutable_data8();
  ::std::string* release_data8();
  void set_allocated_data8(::std::string* data8);

  // optional bytes data9 = 13;
  bool has_data9() const;
  void clear_data9();
  static const int kData9FieldNumber = 13;
  const ::std::string& data9() const;
  void set_data9(const ::std::string& value);
  #if LANG_CXX11
  void set_data9(::std::string&& value);
  #endif
  void set_data9(const char* value);
  void set_data9(const void* value, size_t size);
  ::std::string* mutable_data9();
  ::std::string* release_data9();
  void set_allocated_data9(::std::string* data9);

  // optional uint64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional uint32 seq = 2;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.Needata)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_seq();
  void clear_has_seq();
  void set_has_id();
  void clear_has_id();
  void set_has_content();
  void clear_has_content();
  void set_has_data1();
  void clear_has_data1();
  void set_has_data2();
  void clear_has_data2();
  void set_has_data3();
  void clear_has_data3();
  void set_has_data4();
  void clear_has_data4();
  void set_has_data5();
  void clear_has_data5();
  void set_has_data6();
  void clear_has_data6();
  void set_has_data7();
  void clear_has_data7();
  void set_has_data8();
  void clear_has_data8();
  void set_has_data9();
  void clear_has_data9();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr data1_;
  ::google::protobuf::internal::ArenaStringPtr data2_;
  ::google::protobuf::internal::ArenaStringPtr data3_;
  ::google::protobuf::internal::ArenaStringPtr data4_;
  ::google::protobuf::internal::ArenaStringPtr data5_;
  ::google::protobuf::internal::ArenaStringPtr data6_;
  ::google::protobuf::internal::ArenaStringPtr data7_;
  ::google::protobuf::internal::ArenaStringPtr data8_;
  ::google::protobuf::internal::ArenaStringPtr data9_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 id_;
  friend struct ::protobuf_unit_5ftest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnitTest

// optional string class_name = 1;
inline bool UnitTest::has_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitTest::set_has_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitTest::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitTest::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_class_name();
}
inline const ::std::string& UnitTest::class_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.UnitTest.class_name)
  return class_name_.GetNoArena();
}
inline void UnitTest::set_class_name(const ::std::string& value) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.UnitTest.class_name)
}
#if LANG_CXX11
inline void UnitTest::set_class_name(::std::string&& value) {
  set_has_class_name();
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.UnitTest.class_name)
}
#endif
inline void UnitTest::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.UnitTest.class_name)
}
inline void UnitTest::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.UnitTest.class_name)
}
inline ::std::string* UnitTest::mutable_class_name() {
  set_has_class_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.UnitTest.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnitTest::release_class_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.UnitTest.class_name)
  if (!has_class_name()) {
    return NULL;
  }
  clear_has_class_name();
  return class_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitTest::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    set_has_class_name();
  } else {
    clear_has_class_name();
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.UnitTest.class_name)
}

// optional string case_name = 2;
inline bool UnitTest::has_case_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitTest::set_has_case_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitTest::clear_has_case_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitTest::clear_case_name() {
  case_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_case_name();
}
inline const ::std::string& UnitTest::case_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.UnitTest.case_name)
  return case_name_.GetNoArena();
}
inline void UnitTest::set_case_name(const ::std::string& value) {
  set_has_case_name();
  case_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.UnitTest.case_name)
}
#if LANG_CXX11
inline void UnitTest::set_case_name(::std::string&& value) {
  set_has_case_name();
  case_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.UnitTest.case_name)
}
#endif
inline void UnitTest::set_case_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_case_name();
  case_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.UnitTest.case_name)
}
inline void UnitTest::set_case_name(const char* value, size_t size) {
  set_has_case_name();
  case_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.UnitTest.case_name)
}
inline ::std::string* UnitTest::mutable_case_name() {
  set_has_case_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.UnitTest.case_name)
  return case_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnitTest::release_case_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.UnitTest.case_name)
  if (!has_case_name()) {
    return NULL;
  }
  clear_has_case_name();
  return case_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitTest::set_allocated_case_name(::std::string* case_name) {
  if (case_name != NULL) {
    set_has_case_name();
  } else {
    clear_has_case_name();
  }
  case_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), case_name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.UnitTest.case_name)
}

// -------------------------------------------------------------------

// Chatter

// optional uint64 timestamp = 1;
inline bool Chatter::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Chatter::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Chatter::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Chatter::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Chatter::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Chatter.timestamp)
  return timestamp_;
}
inline void Chatter::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Chatter.timestamp)
}

// optional uint64 lidar_timestamp = 2;
inline bool Chatter::has_lidar_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Chatter::set_has_lidar_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Chatter::clear_has_lidar_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Chatter::clear_lidar_timestamp() {
  lidar_timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_lidar_timestamp();
}
inline ::google::protobuf::uint64 Chatter::lidar_timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Chatter.lidar_timestamp)
  return lidar_timestamp_;
}
inline void Chatter::set_lidar_timestamp(::google::protobuf::uint64 value) {
  set_has_lidar_timestamp();
  lidar_timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Chatter.lidar_timestamp)
}

// optional uint64 seq = 3;
inline bool Chatter::has_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Chatter::set_has_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Chatter::clear_has_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Chatter::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::uint64 Chatter::seq() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Chatter.seq)
  return seq_;
}
inline void Chatter::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Chatter.seq)
}

// optional bytes content = 4;
inline bool Chatter::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Chatter::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Chatter::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Chatter::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Chatter::content() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Chatter.content)
  return content_.GetNoArena();
}
inline void Chatter::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Chatter.content)
}
#if LANG_CXX11
inline void Chatter::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Chatter.content)
}
#endif
inline void Chatter::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Chatter.content)
}
inline void Chatter::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Chatter.content)
}
inline ::std::string* Chatter::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Chatter.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Chatter::release_content() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Chatter.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Chatter::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Chatter.content)
}

// -------------------------------------------------------------------

// ChatterBenchmark

// optional uint64 stamp = 1;
inline bool ChatterBenchmark::has_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatterBenchmark::set_has_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatterBenchmark::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatterBenchmark::clear_stamp() {
  stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_stamp();
}
inline ::google::protobuf::uint64 ChatterBenchmark::stamp() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ChatterBenchmark.stamp)
  return stamp_;
}
inline void ChatterBenchmark::set_stamp(::google::protobuf::uint64 value) {
  set_has_stamp();
  stamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ChatterBenchmark.stamp)
}

// optional uint64 seq = 2;
inline bool ChatterBenchmark::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatterBenchmark::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatterBenchmark::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatterBenchmark::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::uint64 ChatterBenchmark::seq() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ChatterBenchmark.seq)
  return seq_;
}
inline void ChatterBenchmark::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ChatterBenchmark.seq)
}

// optional string content = 3;
inline bool ChatterBenchmark::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatterBenchmark::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatterBenchmark::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatterBenchmark::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& ChatterBenchmark::content() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ChatterBenchmark.content)
  return content_.GetNoArena();
}
inline void ChatterBenchmark::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ChatterBenchmark.content)
}
#if LANG_CXX11
inline void ChatterBenchmark::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ChatterBenchmark.content)
}
#endif
inline void ChatterBenchmark::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ChatterBenchmark.content)
}
inline void ChatterBenchmark::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ChatterBenchmark.content)
}
inline ::std::string* ChatterBenchmark::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ChatterBenchmark.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatterBenchmark::release_content() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ChatterBenchmark.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatterBenchmark::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ChatterBenchmark.content)
}

// -------------------------------------------------------------------

// Needata

// optional uint64 timestamp = 1;
inline bool Needata::has_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Needata::set_has_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Needata::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Needata::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Needata::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.timestamp)
  return timestamp_;
}
inline void Needata::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.timestamp)
}

// optional uint32 seq = 2;
inline bool Needata::has_seq() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Needata::set_has_seq() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Needata::clear_has_seq() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Needata::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 Needata::seq() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.seq)
  return seq_;
}
inline void Needata::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.seq)
}

// optional uint32 id = 3;
inline bool Needata::has_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Needata::set_has_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Needata::clear_has_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Needata::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Needata::id() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.id)
  return id_;
}
inline void Needata::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.id)
}

// optional bytes content = 4;
inline bool Needata::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Needata::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Needata::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Needata::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Needata::content() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.content)
  return content_.GetNoArena();
}
inline void Needata::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.content)
}
#if LANG_CXX11
inline void Needata::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.content)
}
#endif
inline void Needata::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.content)
}
inline void Needata::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.content)
}
inline ::std::string* Needata::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_content() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.content)
}

// optional bytes data1 = 5;
inline bool Needata::has_data1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Needata::set_has_data1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Needata::clear_has_data1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Needata::clear_data1() {
  data1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data1();
}
inline const ::std::string& Needata::data1() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data1)
  return data1_.GetNoArena();
}
inline void Needata::set_data1(const ::std::string& value) {
  set_has_data1();
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data1)
}
#if LANG_CXX11
inline void Needata::set_data1(::std::string&& value) {
  set_has_data1();
  data1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data1)
}
#endif
inline void Needata::set_data1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data1();
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data1)
}
inline void Needata::set_data1(const void* value, size_t size) {
  set_has_data1();
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data1)
}
inline ::std::string* Needata::mutable_data1() {
  set_has_data1();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data1)
  return data1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data1() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data1)
  if (!has_data1()) {
    return NULL;
  }
  clear_has_data1();
  return data1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data1(::std::string* data1) {
  if (data1 != NULL) {
    set_has_data1();
  } else {
    clear_has_data1();
  }
  data1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data1);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data1)
}

// optional bytes data2 = 6;
inline bool Needata::has_data2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Needata::set_has_data2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Needata::clear_has_data2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Needata::clear_data2() {
  data2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data2();
}
inline const ::std::string& Needata::data2() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data2)
  return data2_.GetNoArena();
}
inline void Needata::set_data2(const ::std::string& value) {
  set_has_data2();
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data2)
}
#if LANG_CXX11
inline void Needata::set_data2(::std::string&& value) {
  set_has_data2();
  data2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data2)
}
#endif
inline void Needata::set_data2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data2();
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data2)
}
inline void Needata::set_data2(const void* value, size_t size) {
  set_has_data2();
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data2)
}
inline ::std::string* Needata::mutable_data2() {
  set_has_data2();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data2)
  return data2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data2() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data2)
  if (!has_data2()) {
    return NULL;
  }
  clear_has_data2();
  return data2_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data2(::std::string* data2) {
  if (data2 != NULL) {
    set_has_data2();
  } else {
    clear_has_data2();
  }
  data2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data2);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data2)
}

// optional bytes data3 = 7;
inline bool Needata::has_data3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Needata::set_has_data3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Needata::clear_has_data3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Needata::clear_data3() {
  data3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data3();
}
inline const ::std::string& Needata::data3() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data3)
  return data3_.GetNoArena();
}
inline void Needata::set_data3(const ::std::string& value) {
  set_has_data3();
  data3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data3)
}
#if LANG_CXX11
inline void Needata::set_data3(::std::string&& value) {
  set_has_data3();
  data3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data3)
}
#endif
inline void Needata::set_data3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data3();
  data3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data3)
}
inline void Needata::set_data3(const void* value, size_t size) {
  set_has_data3();
  data3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data3)
}
inline ::std::string* Needata::mutable_data3() {
  set_has_data3();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data3)
  return data3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data3() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data3)
  if (!has_data3()) {
    return NULL;
  }
  clear_has_data3();
  return data3_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data3(::std::string* data3) {
  if (data3 != NULL) {
    set_has_data3();
  } else {
    clear_has_data3();
  }
  data3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data3);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data3)
}

// optional bytes data4 = 8;
inline bool Needata::has_data4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Needata::set_has_data4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Needata::clear_has_data4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Needata::clear_data4() {
  data4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data4();
}
inline const ::std::string& Needata::data4() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data4)
  return data4_.GetNoArena();
}
inline void Needata::set_data4(const ::std::string& value) {
  set_has_data4();
  data4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data4)
}
#if LANG_CXX11
inline void Needata::set_data4(::std::string&& value) {
  set_has_data4();
  data4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data4)
}
#endif
inline void Needata::set_data4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data4();
  data4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data4)
}
inline void Needata::set_data4(const void* value, size_t size) {
  set_has_data4();
  data4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data4)
}
inline ::std::string* Needata::mutable_data4() {
  set_has_data4();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data4)
  return data4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data4() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data4)
  if (!has_data4()) {
    return NULL;
  }
  clear_has_data4();
  return data4_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data4(::std::string* data4) {
  if (data4 != NULL) {
    set_has_data4();
  } else {
    clear_has_data4();
  }
  data4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data4);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data4)
}

// optional bytes data5 = 9;
inline bool Needata::has_data5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Needata::set_has_data5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Needata::clear_has_data5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Needata::clear_data5() {
  data5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data5();
}
inline const ::std::string& Needata::data5() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data5)
  return data5_.GetNoArena();
}
inline void Needata::set_data5(const ::std::string& value) {
  set_has_data5();
  data5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data5)
}
#if LANG_CXX11
inline void Needata::set_data5(::std::string&& value) {
  set_has_data5();
  data5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data5)
}
#endif
inline void Needata::set_data5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data5();
  data5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data5)
}
inline void Needata::set_data5(const void* value, size_t size) {
  set_has_data5();
  data5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data5)
}
inline ::std::string* Needata::mutable_data5() {
  set_has_data5();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data5)
  return data5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data5() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data5)
  if (!has_data5()) {
    return NULL;
  }
  clear_has_data5();
  return data5_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data5(::std::string* data5) {
  if (data5 != NULL) {
    set_has_data5();
  } else {
    clear_has_data5();
  }
  data5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data5);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data5)
}

// optional bytes data6 = 10;
inline bool Needata::has_data6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Needata::set_has_data6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Needata::clear_has_data6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Needata::clear_data6() {
  data6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data6();
}
inline const ::std::string& Needata::data6() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data6)
  return data6_.GetNoArena();
}
inline void Needata::set_data6(const ::std::string& value) {
  set_has_data6();
  data6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data6)
}
#if LANG_CXX11
inline void Needata::set_data6(::std::string&& value) {
  set_has_data6();
  data6_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data6)
}
#endif
inline void Needata::set_data6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data6();
  data6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data6)
}
inline void Needata::set_data6(const void* value, size_t size) {
  set_has_data6();
  data6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data6)
}
inline ::std::string* Needata::mutable_data6() {
  set_has_data6();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data6)
  return data6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data6() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data6)
  if (!has_data6()) {
    return NULL;
  }
  clear_has_data6();
  return data6_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data6(::std::string* data6) {
  if (data6 != NULL) {
    set_has_data6();
  } else {
    clear_has_data6();
  }
  data6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data6);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data6)
}

// optional bytes data7 = 11;
inline bool Needata::has_data7() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Needata::set_has_data7() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Needata::clear_has_data7() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Needata::clear_data7() {
  data7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data7();
}
inline const ::std::string& Needata::data7() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data7)
  return data7_.GetNoArena();
}
inline void Needata::set_data7(const ::std::string& value) {
  set_has_data7();
  data7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data7)
}
#if LANG_CXX11
inline void Needata::set_data7(::std::string&& value) {
  set_has_data7();
  data7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data7)
}
#endif
inline void Needata::set_data7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data7();
  data7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data7)
}
inline void Needata::set_data7(const void* value, size_t size) {
  set_has_data7();
  data7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data7)
}
inline ::std::string* Needata::mutable_data7() {
  set_has_data7();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data7)
  return data7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data7() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data7)
  if (!has_data7()) {
    return NULL;
  }
  clear_has_data7();
  return data7_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data7(::std::string* data7) {
  if (data7 != NULL) {
    set_has_data7();
  } else {
    clear_has_data7();
  }
  data7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data7);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data7)
}

// optional bytes data8 = 12;
inline bool Needata::has_data8() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Needata::set_has_data8() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Needata::clear_has_data8() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Needata::clear_data8() {
  data8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data8();
}
inline const ::std::string& Needata::data8() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data8)
  return data8_.GetNoArena();
}
inline void Needata::set_data8(const ::std::string& value) {
  set_has_data8();
  data8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data8)
}
#if LANG_CXX11
inline void Needata::set_data8(::std::string&& value) {
  set_has_data8();
  data8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data8)
}
#endif
inline void Needata::set_data8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data8();
  data8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data8)
}
inline void Needata::set_data8(const void* value, size_t size) {
  set_has_data8();
  data8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data8)
}
inline ::std::string* Needata::mutable_data8() {
  set_has_data8();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data8)
  return data8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data8() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data8)
  if (!has_data8()) {
    return NULL;
  }
  clear_has_data8();
  return data8_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data8(::std::string* data8) {
  if (data8 != NULL) {
    set_has_data8();
  } else {
    clear_has_data8();
  }
  data8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data8);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data8)
}

// optional bytes data9 = 13;
inline bool Needata::has_data9() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Needata::set_has_data9() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Needata::clear_has_data9() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Needata::clear_data9() {
  data9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data9();
}
inline const ::std::string& Needata::data9() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Needata.data9)
  return data9_.GetNoArena();
}
inline void Needata::set_data9(const ::std::string& value) {
  set_has_data9();
  data9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Needata.data9)
}
#if LANG_CXX11
inline void Needata::set_data9(::std::string&& value) {
  set_has_data9();
  data9_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Needata.data9)
}
#endif
inline void Needata::set_data9(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data9();
  data9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Needata.data9)
}
inline void Needata::set_data9(const void* value, size_t size) {
  set_has_data9();
  data9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Needata.data9)
}
inline ::std::string* Needata::mutable_data9() {
  set_has_data9();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Needata.data9)
  return data9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Needata::release_data9() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Needata.data9)
  if (!has_data9()) {
    return NULL;
  }
  clear_has_data9();
  return data9_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Needata::set_allocated_data9(::std::string* data9) {
  if (data9 != NULL) {
    set_has_data9();
  } else {
    clear_has_data9();
  }
  data9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data9);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Needata.data9)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_unit_5ftest_2eproto
