// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parameter.proto

#ifndef PROTOBUF_INCLUDED_parameter_2eproto
#define PROTOBUF_INCLUDED_parameter_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_parameter_2eproto 

namespace protobuf_parameter_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_parameter_2eproto
namespace apollo {
namespace cyber {
namespace proto {
class BoolResult;
class BoolResultDefaultTypeInternal;
extern BoolResultDefaultTypeInternal _BoolResult_default_instance_;
class NodeName;
class NodeNameDefaultTypeInternal;
extern NodeNameDefaultTypeInternal _NodeName_default_instance_;
class Param;
class ParamDefaultTypeInternal;
extern ParamDefaultTypeInternal _Param_default_instance_;
class ParamName;
class ParamNameDefaultTypeInternal;
extern ParamNameDefaultTypeInternal _ParamName_default_instance_;
class Params;
class ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::cyber::proto::BoolResult* Arena::CreateMaybeMessage<::apollo::cyber::proto::BoolResult>(Arena*);
template<> ::apollo::cyber::proto::NodeName* Arena::CreateMaybeMessage<::apollo::cyber::proto::NodeName>(Arena*);
template<> ::apollo::cyber::proto::Param* Arena::CreateMaybeMessage<::apollo::cyber::proto::Param>(Arena*);
template<> ::apollo::cyber::proto::ParamName* Arena::CreateMaybeMessage<::apollo::cyber::proto::ParamName>(Arena*);
template<> ::apollo::cyber::proto::Params* Arena::CreateMaybeMessage<::apollo::cyber::proto::Params>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace cyber {
namespace proto {

enum ParamType {
  NOT_SET = 0,
  BOOL = 1,
  INT = 2,
  DOUBLE = 3,
  STRING = 4,
  PROTOBUF = 5
};
bool ParamType_IsValid(int value);
const ParamType ParamType_MIN = NOT_SET;
const ParamType ParamType_MAX = PROTOBUF;
const int ParamType_ARRAYSIZE = ParamType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ParamType_descriptor();
inline const ::std::string& ParamType_Name(ParamType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ParamType_descriptor(), value);
}
inline bool ParamType_Parse(
    const ::std::string& name, ParamType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ParamType>(
    ParamType_descriptor(), name, value);
}
// ===================================================================

class Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.Param) */ {
 public:
  Param();
  virtual ~Param();

  Param(const Param& from);

  inline Param& operator=(const Param& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Param(Param&& from) noexcept
    : Param() {
    *this = ::std::move(from);
  }

  inline Param& operator=(Param&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Param& default_instance();

  enum OneofValueCase {
    kBoolValue = 4,
    kIntValue = 5,
    kDoubleValue = 6,
    kStringValue = 7,
    ONEOF_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Param* internal_default_instance() {
    return reinterpret_cast<const Param*>(
               &_Param_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Param* other);
  friend void swap(Param& a, Param& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Param* New() const final {
    return CreateMaybeMessage<Param>(NULL);
  }

  Param* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Param>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Param& from);
  void MergeFrom(const Param& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Param* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string type_name = 3;
  bool has_type_name() const;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 3;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  #if LANG_CXX11
  void set_type_name(::std::string&& value);
  #endif
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional bytes proto_desc = 8;
  bool has_proto_desc() const;
  void clear_proto_desc();
  static const int kProtoDescFieldNumber = 8;
  const ::std::string& proto_desc() const;
  void set_proto_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_proto_desc(::std::string&& value);
  #endif
  void set_proto_desc(const char* value);
  void set_proto_desc(const void* value, size_t size);
  ::std::string* mutable_proto_desc();
  ::std::string* release_proto_desc();
  void set_allocated_proto_desc(::std::string* proto_desc);

  // optional .apollo.cyber.proto.ParamType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::apollo::cyber::proto::ParamType type() const;
  void set_type(::apollo::cyber::proto::ParamType value);

  // optional bool bool_value = 4;
  bool has_bool_value() const;
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 4;
  bool bool_value() const;
  void set_bool_value(bool value);

  // optional int64 int_value = 5;
  bool has_int_value() const;
  void clear_int_value();
  static const int kIntValueFieldNumber = 5;
  ::google::protobuf::int64 int_value() const;
  void set_int_value(::google::protobuf::int64 value);

  // optional double double_value = 6;
  bool has_double_value() const;
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 6;
  double double_value() const;
  void set_double_value(double value);

  // optional string string_value = 7;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 7;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  void clear_oneof_value();
  OneofValueCase oneof_value_case() const;
  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.Param)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_type_name();
  void clear_has_type_name();
  void set_has_bool_value();
  void set_has_int_value();
  void set_has_double_value();
  void set_has_string_value();
  void set_has_proto_desc();
  void clear_has_proto_desc();

  inline bool has_oneof_value() const;
  inline void clear_has_oneof_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr proto_desc_;
  int type_;
  union OneofValueUnion {
    OneofValueUnion() {}
    bool bool_value_;
    ::google::protobuf::int64 int_value_;
    double double_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
  } oneof_value_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_parameter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.NodeName) */ {
 public:
  NodeName();
  virtual ~NodeName();

  NodeName(const NodeName& from);

  inline NodeName& operator=(const NodeName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeName(NodeName&& from) noexcept
    : NodeName() {
    *this = ::std::move(from);
  }

  inline NodeName& operator=(NodeName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeName* internal_default_instance() {
    return reinterpret_cast<const NodeName*>(
               &_NodeName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(NodeName* other);
  friend void swap(NodeName& a, NodeName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeName* New() const final {
    return CreateMaybeMessage<NodeName>(NULL);
  }

  NodeName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeName& from);
  void MergeFrom(const NodeName& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.NodeName)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_parameter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParamName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ParamName) */ {
 public:
  ParamName();
  virtual ~ParamName();

  ParamName(const ParamName& from);

  inline ParamName& operator=(const ParamName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamName(ParamName&& from) noexcept
    : ParamName() {
    *this = ::std::move(from);
  }

  inline ParamName& operator=(ParamName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParamName* internal_default_instance() {
    return reinterpret_cast<const ParamName*>(
               &_ParamName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ParamName* other);
  friend void swap(ParamName& a, ParamName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamName* New() const final {
    return CreateMaybeMessage<ParamName>(NULL);
  }

  ParamName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParamName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParamName& from);
  void MergeFrom(const ParamName& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParamName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ParamName)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_parameter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoolResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.BoolResult) */ {
 public:
  BoolResult();
  virtual ~BoolResult();

  BoolResult(const BoolResult& from);

  inline BoolResult& operator=(const BoolResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoolResult(BoolResult&& from) noexcept
    : BoolResult() {
    *this = ::std::move(from);
  }

  inline BoolResult& operator=(BoolResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BoolResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoolResult* internal_default_instance() {
    return reinterpret_cast<const BoolResult*>(
               &_BoolResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(BoolResult* other);
  friend void swap(BoolResult& a, BoolResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoolResult* New() const final {
    return CreateMaybeMessage<BoolResult>(NULL);
  }

  BoolResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoolResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoolResult& from);
  void MergeFrom(const BoolResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.BoolResult)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool value_;
  friend struct ::protobuf_parameter_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Params : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.Params) */ {
 public:
  Params();
  virtual ~Params();

  Params(const Params& from);

  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Params(Params&& from) noexcept
    : Params() {
    *this = ::std::move(from);
  }

  inline Params& operator=(Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Params& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
               &_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Params* other);
  friend void swap(Params& a, Params& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Params* New() const final {
    return CreateMaybeMessage<Params>(NULL);
  }

  Params* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Params>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Params& from);
  void MergeFrom(const Params& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Params* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.cyber.proto.Param param = 1;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  ::apollo::cyber::proto::Param* mutable_param(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::Param >*
      mutable_param();
  const ::apollo::cyber::proto::Param& param(int index) const;
  ::apollo::cyber::proto::Param* add_param();
  const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::Param >&
      param() const;

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.Params)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::Param > param_;
  friend struct ::protobuf_parameter_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Param

// optional string name = 1;
inline bool Param::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Param::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Param::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Param::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Param::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.name)
  return name_.GetNoArena();
}
inline void Param::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.name)
}
#if LANG_CXX11
inline void Param::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Param.name)
}
#endif
inline void Param::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Param.name)
}
inline void Param::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Param.name)
}
inline ::std::string* Param::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Param.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Param::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Param.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Param::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Param.name)
}

// optional .apollo.cyber.proto.ParamType type = 2;
inline bool Param::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Param::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Param::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Param::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::apollo::cyber::proto::ParamType Param::type() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.type)
  return static_cast< ::apollo::cyber::proto::ParamType >(type_);
}
inline void Param::set_type(::apollo::cyber::proto::ParamType value) {
  assert(::apollo::cyber::proto::ParamType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.type)
}

// optional string type_name = 3;
inline bool Param::has_type_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Param::set_has_type_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Param::clear_has_type_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Param::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type_name();
}
inline const ::std::string& Param::type_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.type_name)
  return type_name_.GetNoArena();
}
inline void Param::set_type_name(const ::std::string& value) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.type_name)
}
#if LANG_CXX11
inline void Param::set_type_name(::std::string&& value) {
  set_has_type_name();
  type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Param.type_name)
}
#endif
inline void Param::set_type_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Param.type_name)
}
inline void Param::set_type_name(const char* value, size_t size) {
  set_has_type_name();
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Param.type_name)
}
inline ::std::string* Param::mutable_type_name() {
  set_has_type_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Param.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Param::release_type_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Param.type_name)
  if (!has_type_name()) {
    return NULL;
  }
  clear_has_type_name();
  return type_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Param::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    set_has_type_name();
  } else {
    clear_has_type_name();
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Param.type_name)
}

// optional bool bool_value = 4;
inline bool Param::has_bool_value() const {
  return oneof_value_case() == kBoolValue;
}
inline void Param::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void Param::clear_bool_value() {
  if (has_bool_value()) {
    oneof_value_.bool_value_ = false;
    clear_has_oneof_value();
  }
}
inline bool Param::bool_value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.bool_value)
  if (has_bool_value()) {
    return oneof_value_.bool_value_;
  }
  return false;
}
inline void Param::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_oneof_value();
    set_has_bool_value();
  }
  oneof_value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.bool_value)
}

// optional int64 int_value = 5;
inline bool Param::has_int_value() const {
  return oneof_value_case() == kIntValue;
}
inline void Param::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void Param::clear_int_value() {
  if (has_int_value()) {
    oneof_value_.int_value_ = GOOGLE_LONGLONG(0);
    clear_has_oneof_value();
  }
}
inline ::google::protobuf::int64 Param::int_value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.int_value)
  if (has_int_value()) {
    return oneof_value_.int_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Param::set_int_value(::google::protobuf::int64 value) {
  if (!has_int_value()) {
    clear_oneof_value();
    set_has_int_value();
  }
  oneof_value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.int_value)
}

// optional double double_value = 6;
inline bool Param::has_double_value() const {
  return oneof_value_case() == kDoubleValue;
}
inline void Param::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void Param::clear_double_value() {
  if (has_double_value()) {
    oneof_value_.double_value_ = 0;
    clear_has_oneof_value();
  }
}
inline double Param::double_value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.double_value)
  if (has_double_value()) {
    return oneof_value_.double_value_;
  }
  return 0;
}
inline void Param::set_double_value(double value) {
  if (!has_double_value()) {
    clear_oneof_value();
    set_has_double_value();
  }
  oneof_value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.double_value)
}

// optional string string_value = 7;
inline bool Param::has_string_value() const {
  return oneof_value_case() == kStringValue;
}
inline void Param::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void Param::clear_string_value() {
  if (has_string_value()) {
    oneof_value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oneof_value();
  }
}
inline const ::std::string& Param::string_value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.string_value)
  if (has_string_value()) {
    return oneof_value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Param::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.string_value)
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.string_value)
}
#if LANG_CXX11
inline void Param::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.string_value)
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Param.string_value)
}
#endif
inline void Param::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Param.string_value)
}
inline void Param::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Param.string_value)
}
inline ::std::string* Param::mutable_string_value() {
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Param.string_value)
  return oneof_value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Param::release_string_value() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Param.string_value)
  if (has_string_value()) {
    clear_has_oneof_value();
    return oneof_value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Param::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_value();
  if (string_value != NULL) {
    set_has_string_value();
    oneof_value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Param.string_value)
}

// optional bytes proto_desc = 8;
inline bool Param::has_proto_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Param::set_has_proto_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Param::clear_has_proto_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Param::clear_proto_desc() {
  proto_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proto_desc();
}
inline const ::std::string& Param::proto_desc() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Param.proto_desc)
  return proto_desc_.GetNoArena();
}
inline void Param::set_proto_desc(const ::std::string& value) {
  set_has_proto_desc();
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.Param.proto_desc)
}
#if LANG_CXX11
inline void Param::set_proto_desc(::std::string&& value) {
  set_has_proto_desc();
  proto_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.Param.proto_desc)
}
#endif
inline void Param::set_proto_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_proto_desc();
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.Param.proto_desc)
}
inline void Param::set_proto_desc(const void* value, size_t size) {
  set_has_proto_desc();
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.Param.proto_desc)
}
inline ::std::string* Param::mutable_proto_desc() {
  set_has_proto_desc();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Param.proto_desc)
  return proto_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Param::release_proto_desc() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.Param.proto_desc)
  if (!has_proto_desc()) {
    return NULL;
  }
  clear_has_proto_desc();
  return proto_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Param::set_allocated_proto_desc(::std::string* proto_desc) {
  if (proto_desc != NULL) {
    set_has_proto_desc();
  } else {
    clear_has_proto_desc();
  }
  proto_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto_desc);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.Param.proto_desc)
}

inline bool Param::has_oneof_value() const {
  return oneof_value_case() != ONEOF_VALUE_NOT_SET;
}
inline void Param::clear_has_oneof_value() {
  _oneof_case_[0] = ONEOF_VALUE_NOT_SET;
}
inline Param::OneofValueCase Param::oneof_value_case() const {
  return Param::OneofValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// NodeName

// optional string value = 1;
inline bool NodeName::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NodeName::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NodeName::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NodeName::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& NodeName::value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.NodeName.value)
  return value_.GetNoArena();
}
inline void NodeName::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.NodeName.value)
}
#if LANG_CXX11
inline void NodeName::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.NodeName.value)
}
#endif
inline void NodeName::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.NodeName.value)
}
inline void NodeName::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.NodeName.value)
}
inline ::std::string* NodeName::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.NodeName.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeName::release_value() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.NodeName.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeName::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.NodeName.value)
}

// -------------------------------------------------------------------

// ParamName

// optional string value = 1;
inline bool ParamName::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ParamName::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ParamName::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ParamName::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ParamName::value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ParamName.value)
  return value_.GetNoArena();
}
inline void ParamName::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ParamName.value)
}
#if LANG_CXX11
inline void ParamName::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ParamName.value)
}
#endif
inline void ParamName::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ParamName.value)
}
inline void ParamName::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ParamName.value)
}
inline ::std::string* ParamName::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ParamName.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParamName::release_value() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ParamName.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParamName::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ParamName.value)
}

// -------------------------------------------------------------------

// BoolResult

// optional bool value = 1;
inline bool BoolResult::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BoolResult::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BoolResult::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BoolResult::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool BoolResult::value() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.BoolResult.value)
  return value_;
}
inline void BoolResult::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.BoolResult.value)
}

// -------------------------------------------------------------------

// Params

// repeated .apollo.cyber.proto.Param param = 1;
inline int Params::param_size() const {
  return param_.size();
}
inline void Params::clear_param() {
  param_.Clear();
}
inline ::apollo::cyber::proto::Param* Params::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.Params.param)
  return param_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::Param >*
Params::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.Params.param)
  return &param_;
}
inline const ::apollo::cyber::proto::Param& Params::param(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.Params.param)
  return param_.Get(index);
}
inline ::apollo::cyber::proto::Param* Params::add_param() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.Params.param)
  return param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::Param >&
Params::param() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.Params.param)
  return param_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::cyber::proto::ParamType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::cyber::proto::ParamType>() {
  return ::apollo::cyber::proto::ParamType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_parameter_2eproto
